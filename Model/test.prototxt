





### DSS ###
name: "DSS"
layer {
      name: "data"
      type: "Python"
      top: "data"
      top: "depth"


      python_param {
        module: "ImageLabelDataTest"
        layer: "ImageLabelDataTest"
        param_str: "{\'root_folder\': \'../data/LFSD/\',\'source\': \'../data/LFSD/list.lst\',  \'mean\': (119.36,119.36,119.36), \'random\': 0, \'seed\': 1337, \'mirror\': 0, \'new_height\':224, \'new_width\':224}"
     }
     }





	### 3 depth branches


	#pool1
	## 2c
	layer {
	bottom: "depth"
	top: "conv1_d0_1"
	name: "conv1_d0_1"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d0_1"
	top: "conv1_d0_1"
	name: "conv1_d0_1_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d0_1"
	top: "conv1_d0_2"
	name: "conv1_d0_2"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d0_2"
	top: "conv1_d0_2"
	name: "conv1_d0_2_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d0_2"
	top: "conv1_d0_3"
	name: "conv1_d0_3"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d0_3"
	top: "conv1_d0_3"
	name: "conv1_d0_3_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d0_3"
	top: "conv1_d0_4"
	name: "conv1_d0_4"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 1 pad: 2 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Sigmoid" name: "sigmoid-d0" bottom: "conv1_d0_4" top: "weight_map_d0" }


	## 2c
	layer {
	bottom: "depth"
	top: "conv1_d1_1"
	name: "conv1_d1_1"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d1_1"
	top: "conv1_d1_1"
	name: "conv1_d1_1_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d1_1"
	top: "conv1_d1_2"
	name: "conv1_d1_2"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d1_2"
	top: "conv1_d1_2"
	name: "conv1_d1_2_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d1_2"
	top: "conv1_d1_3"
	name: "conv1_d1_3"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d1_3"
	top: "conv1_d1_3"
	name: "conv1_d1_3_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d1_3"
	top: "conv1_d1_4"
	name: "conv1_d1_4"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 1 pad: 2 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Sigmoid" name: "sigmoid-d1" bottom: "conv1_d1_4" top: "weight_map_d1" }



	## 3d
	layer {
	bottom: "depth"
	top: "conv1_d2_1"
	name: "conv1_d2_1"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d2_1"
	top: "conv1_d2_1"
	name: "conv1_d2_1_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d2_1"
	top: "conv1_d2_2"
	name: "conv1_d2_2"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d2_2"
	top: "conv1_d2_2"
	name: "conv1_d2_2_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d2_2"
	top: "conv1_d2_3"
	name: "conv1_d2_3"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d2_3"
	top: "conv1_d2_3"
	name: "conv1_d2_3_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d2_3"
	top: "conv1_d2_4"
	name: "conv1_d2_4"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d2_4"
	top: "conv1_d2_4"
	name: "conv1_d2_4_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d2_4"
	top: "conv1_d2_5"
	name: "conv1_d2_5"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d2_5"
	top: "conv1_d2_5"
	name: "conv1_d2_5_relu"
	type: "ReLU"
	}

	layer {
	bottom: "conv1_d2_5"
	top: "conv1_d2_6"
	name: "conv1_d2_6"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 1 pad: 2 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Sigmoid" name: "sigmoid-d2" bottom: "conv1_d2_6" top: "weight_map_d2" }



	# ## 4f
	layer {
	bottom: "depth"
	top: "conv1_d3_1"
	name: "conv1_d3_1"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_1"
	top: "conv1_d3_2"
	name: "conv1_d3_2"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_2"
	top: "conv1_d3_3"
	name: "conv1_d3_3"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_3"
	top: "conv1_d3_4"
	name: "conv1_d3_4"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_4"
	top: "conv1_d3_5"
	name: "conv1_d3_5"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_5"
	top: "conv1_d3_6"
	name: "conv1_d3_6"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_6"
	top: "conv1_d3_7"
	name: "conv1_d3_7"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d3_7"
	top: "conv1_d3_8"
	name: "conv1_d3_8"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 1 pad: 2 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Sigmoid" name: "sigmoid-d3" bottom: "conv1_d3_8" top: "weight_map_d3" }





	## 5c
	layer {
	bottom: "depth"
	top: "conv1_d4_1"
	name: "conv1_d4_1"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_1"
	top: "conv1_d4_2"
	name: "conv1_d4_2"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_2"
	top: "conv1_d4_3"
	name: "conv1_d4_3"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_3"
	top: "conv1_d4_4"
	name: "conv1_d4_4"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_4"
	top: "conv1_d4_5"
	name: "conv1_d4_5"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_5"
	top: "conv1_d4_6"
	name: "conv1_d4_6"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_6"
	top: "conv1_d4_7"
	name: "conv1_d4_7"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_7"
	top: "conv1_d4_8"
	name: "conv1_d4_8"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_8"
	top: "conv1_d4_9"
	name: "conv1_d4_9"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 32 pad: 1 kernel_size: 4 stride: 2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer {
	bottom: "conv1_d4_9"
	top: "conv1_d4_10"
	name: "conv1_d4_10"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 1 pad: 2 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Sigmoid" name: "sigmoid-d4" bottom: "conv1_d4_10" top: "weight_map_d4" }




######################################################################################################################################
#RES50 CONV1
layer {
	bottom: "data"
	top: "conv1"
	name: "conv1"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 7
		pad: 3
		stride: 2
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "bn_conv1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "scale_conv1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "conv1"
	top: "conv1"
	name: "conv1_relu"
	type: "ReLU"
}


##############################################################################################################################
#ENHANCE

	layer { type: "Crop" name: 'crop0' bottom: 'weight_map_d0' bottom: 'conv1' top: 'weight_map_d0_croped' }

	layer {
	name: "add_weight_0"
	type: "Python"
	bottom: "conv1"
	bottom: 'weight_map_d0_croped'
	top: "pool1_weighted"
	python_param {
	module: "add_weight"
	layer: "addWeight"
	}
	}

	layer {
	bottom: "pool1_weighted"
	top: "pool1_weighted_c"
	name: "pool1_weighted_c"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }



	layer {
	bottom: "conv1"
	bottom: "pool1_weighted_c"
	top: "pool1_weighted_f"
	name: "pool1_weighted_f"
	type: "Eltwise"
	}

	layer {
	bottom: "pool1_weighted_f"
	top: "pool1"
	name: "pool1"
	type: "Pooling"
	pooling_param {
		kernel_size: 3
		stride: 2
		pool: MAX
	}
}

###################################################################################################################
#RES50 CONV2
layer {
	bottom: "pool1"
	top: "res2a_branch1"
	name: "res2a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1"
	name: "bn2a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1"
	name: "scale2a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "pool1"
	top: "res2a_branch2a"
	name: "res2a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "bn2a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "scale2a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a"
	name: "res2a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2b"
	name: "res2a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "bn2a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "scale2a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b"
	name: "res2a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2c"
	name: "res2a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c"
	name: "bn2a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c"
	name: "scale2a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a_branch1"
	bottom: "res2a_branch2c"
	top: "res2a"
	name: "res2a"
	type: "Eltwise"
}

layer {
	bottom: "res2a"
	top: "res2a"
	name: "res2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "bn2b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "scale2b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2b"
	name: "res2b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "bn2b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "scale2b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b"
	name: "res2b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2c"
	name: "res2b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "bn2b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c"
	name: "scale2b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2a"
	bottom: "res2b_branch2c"
	top: "res2b"
	name: "res2b"
	type: "Eltwise"
}

layer {
	bottom: "res2b"
	top: "res2b"
	name: "res2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2b"
	top: "res2c_branch2a"
	name: "res2c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "bn2c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "scale2c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a"
	name: "res2c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2b"
	name: "res2c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "bn2c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "scale2c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b"
	name: "res2c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2c"
	name: "res2c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c"
	name: "bn2c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c"
	name: "scale2c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2b"
	bottom: "res2c_branch2c"
	top: "res2c"
	name: "res2c"
	type: "Eltwise"
}

layer {
	bottom: "res2c"
	top: "res2c"
	name: "res2c_relu"
	type: "ReLU"
}

#########################################################################################################
#ENHANCE CONV2

	layer { type: "Crop" name: 'crop1' bottom: 'weight_map_d1' bottom: 'res2c' top: 'weight_map_d1_croped' }

	layer {
	name: "add_weight_1"
	type: "Python"
	bottom: "res2c"
	bottom: 'weight_map_d1_croped'
	top: "pool2_weighted"
	python_param {
	module: "add_weight"
	layer: "addWeight"
	}
	}

	layer {
	bottom: "pool2_weighted"
	top: "pool2_weighted_c"
	name: "pool2_weighted_c"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }



	layer {
	bottom: "res2c"
	bottom: "pool2_weighted_c"
	top: "res2c_weighted_e"
	name: "res2c_weighted_e"
	type: "Eltwise"
	}

##################################################################################################################
#RES50 CONV3
layer {
	bottom: "res2c_weighted_e"
	top: "res3a_branch1"
	name: "res3a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1"
	name: "bn3a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1"
	name: "scale3a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res2c_weighted_e"
	top: "res3a_branch2a"
	name: "res3a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "bn3a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "scale3a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a"
	name: "res3a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2b"
	name: "res3a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "bn3a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "scale3a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b"
	name: "res3a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2c"
	name: "res3a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3a_branch2c"
	top: "res3a_branch2c"
	name: "bn3a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3a_branch2c"
	top: "res3a_branch2c"
	name: "scale3a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a_branch1"
	bottom: "res3a_branch2c"
	top: "res3a"
	name: "res3a"
	type: "Eltwise"
}

layer {
	bottom: "res3a"
	top: "res3a"
	name: "res3a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3a"
	top: "res3b_branch2a"
	name: "res3b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "bn3b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "scale3b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a"
	name: "res3b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2b"
	name: "res3b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "bn3b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "scale3b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b"
	name: "res3b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2c"
	name: "res3b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3b_branch2c"
	top: "res3b_branch2c"
	name: "bn3b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3b_branch2c"
	top: "res3b_branch2c"
	name: "scale3b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3a"
	bottom: "res3b_branch2c"
	top: "res3b"
	name: "res3b"
	type: "Eltwise"
}

layer {
	bottom: "res3b"
	top: "res3b"
	name: "res3b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3b"
	top: "res3c_branch2a"
	name: "res3c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "bn3c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "scale3c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a"
	name: "res3c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2b"
	name: "res3c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "bn3c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "scale3c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b"
	name: "res3c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2c"
	name: "res3c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3c_branch2c"
	top: "res3c_branch2c"
	name: "bn3c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3c_branch2c"
	top: "res3c_branch2c"
	name: "scale3c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3b"
	bottom: "res3c_branch2c"
	top: "res3c"
	name: "res3c"
	type: "Eltwise"
}

layer {
	bottom: "res3c"
	top: "res3c"
	name: "res3c_relu"
	type: "ReLU"
}

layer {
	bottom: "res3c"
	top: "res3d_branch2a"
	name: "res3d_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "bn3d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "scale3d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a"
	name: "res3d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2b"
	name: "res3d_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "bn3d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "scale3d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b"
	name: "res3d_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2c"
	name: "res3d_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res3d_branch2c"
	top: "res3d_branch2c"
	name: "bn3d_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res3d_branch2c"
	top: "res3d_branch2c"
	name: "scale3d_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3c"
	bottom: "res3d_branch2c"
	top: "res3d"
	name: "res3d"
	type: "Eltwise"
}

layer {
	bottom: "res3d"
	top: "res3d"
	name: "res3d_relu"
	type: "ReLU"
}

############################################################################################
#ENHANCE CONV3

	layer { type: "Crop" name: 'crop2' bottom: 'weight_map_d2' bottom: "res3d" top: 'weight_map_d2_croped' }

	layer {
	name: "add_weight_2"
	type: "Python"
	bottom: "res3d"
	bottom: 'weight_map_d2_croped'
	top: "res3d_weighted"
	python_param {
	module: "add_weight"
	layer: "addWeight"
	}
	}


	layer {
	bottom: "res3d_weighted"
	top: "res3d_weighted_c"
	name: "res3d_weighted_c"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }



	layer {
	bottom: "res3d"
	bottom: "res3d_weighted_c"
	top: "res3d_weighted_e"
	name: "res3d_weighted_e"
	type: "Eltwise"
	}

#########################################################################################################################
#RES50 CONV4
layer {
	bottom: "res3d_weighted_e"
	top: "res4a_branch1"
	name: "res4a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1"
	name: "bn4a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1"
	name: "scale4a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res3d_weighted_e"
	top: "res4a_branch2a"
	name: "res4a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "bn4a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "scale4a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a"
	name: "res4a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2b"
	name: "res4a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "bn4a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "scale4a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b"
	name: "res4a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2c"
	name: "res4a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4a_branch2c"
	top: "res4a_branch2c"
	name: "bn4a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4a_branch2c"
	top: "res4a_branch2c"
	name: "scale4a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a_branch1"
	bottom: "res4a_branch2c"
	top: "res4a"
	name: "res4a"
	type: "Eltwise"
}

layer {
	bottom: "res4a"
	top: "res4a"
	name: "res4a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a"
	top: "res4b_branch2a"
	name: "res4b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "bn4b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "scale4b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a"
	name: "res4b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2b"
	name: "res4b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "bn4b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "scale4b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b"
	name: "res4b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2c"
	name: "res4b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4b_branch2c"
	top: "res4b_branch2c"
	name: "bn4b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4b_branch2c"
	top: "res4b_branch2c"
	name: "scale4b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4a"
	bottom: "res4b_branch2c"
	top: "res4b"
	name: "res4b"
	type: "Eltwise"
}

layer {
	bottom: "res4b"
	top: "res4b"
	name: "res4b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4b"
	top: "res4c_branch2a"
	name: "res4c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "bn4c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "scale4c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a"
	name: "res4c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2b"
	name: "res4c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "bn4c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "scale4c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b"
	name: "res4c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2c"
	name: "res4c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4c_branch2c"
	top: "res4c_branch2c"
	name: "bn4c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4c_branch2c"
	top: "res4c_branch2c"
	name: "scale4c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4b"
	bottom: "res4c_branch2c"
	top: "res4c"
	name: "res4c"
	type: "Eltwise"
}

layer {
	bottom: "res4c"
	top: "res4c"
	name: "res4c_relu"
	type: "ReLU"
}

layer {
	bottom: "res4c"
	top: "res4d_branch2a"
	name: "res4d_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "bn4d_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "scale4d_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a"
	name: "res4d_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2b"
	name: "res4d_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "bn4d_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "scale4d_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b"
	name: "res4d_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2c"
	name: "res4d_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4d_branch2c"
	top: "res4d_branch2c"
	name: "bn4d_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4d_branch2c"
	top: "res4d_branch2c"
	name: "scale4d_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4c"
	bottom: "res4d_branch2c"
	top: "res4d"
	name: "res4d"
	type: "Eltwise"
}

layer {
	bottom: "res4d"
	top: "res4d"
	name: "res4d_relu"
	type: "ReLU"
}

layer {
	bottom: "res4d"
	top: "res4e_branch2a"
	name: "res4e_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "bn4e_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "scale4e_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a"
	name: "res4e_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2b"
	name: "res4e_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "bn4e_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "scale4e_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b"
	name: "res4e_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2c"
	name: "res4e_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4e_branch2c"
	top: "res4e_branch2c"
	name: "bn4e_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4e_branch2c"
	top: "res4e_branch2c"
	name: "scale4e_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4d"
	bottom: "res4e_branch2c"
	top: "res4e"
	name: "res4e"
	type: "Eltwise"
}

layer {
	bottom: "res4e"
	top: "res4e"
	name: "res4e_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e"
	top: "res4f_branch2a"
	name: "res4f_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a"
	name: "bn4f_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a"
	name: "scale4f_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a"
	name: "res4f_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2b"
	name: "res4f_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b"
	name: "bn4f_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b"
	name: "scale4f_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b"
	name: "res4f_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2c"
	name: "res4f_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res4f_branch2c"
	top: "res4f_branch2c"
	name: "bn4f_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res4f_branch2c"
	top: "res4f_branch2c"
	name: "scale4f_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4e"
	bottom: "res4f_branch2c"
	top: "res4f"
	name: "res4f"
	type: "Eltwise"
}

layer {
	bottom: "res4f"
	top: "res4f"
	name: "res4f_relu"
	type: "ReLU"
}

#######################################################################################################
#ENHANCE CONV4

	layer { type: "Crop" name: 'crop3' bottom: 'weight_map_d3' bottom: "res4f" top: 'weight_map_d3_croped' }

	layer {
	name: "add_weight_3"
	type: "Python"
	bottom: "res4f"
	bottom: 'weight_map_d3_croped'
	top: "res4f_weighted"
	python_param {
	module: "add_weight"
	layer: "addWeight"
	}
	}


	layer {
	bottom: "res4f_weighted"
	top: "res4f_weighted_c"
	name: "res4f_weighted_c"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 1024 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }



	layer {
	bottom: "res4f"
	bottom: "res4f_weighted_c"
	top: "res4f_weighted_e"
	name: "res4f_weighted_e"
	type: "Eltwise"
	}

#########################################################################################################################
#RES50 CONV5

layer {
	bottom: "res4f_weighted_e"
	top: "res5a_branch1"
	name: "res5a_branch1"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch1"
	top: "res5a_branch1"
	name: "bn5a_branch1"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5a_branch1"
	top: "res5a_branch1"
	name: "scale5a_branch1"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res4f_weighted_e"
	top: "res5a_branch2a"
	name: "res5a_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 2
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a"
	name: "bn5a_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a"
	name: "scale5a_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a"
	name: "res5a_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2b"
	name: "res5a_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b"
	name: "bn5a_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b"
	name: "scale5a_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b"
	name: "res5a_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2c"
	name: "res5a_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5a_branch2c"
	top: "res5a_branch2c"
	name: "bn5a_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5a_branch2c"
	top: "res5a_branch2c"
	name: "scale5a_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a_branch1"
	bottom: "res5a_branch2c"
	top: "res5a"
	name: "res5a"
	type: "Eltwise"
}

layer {
	bottom: "res5a"
	top: "res5a"
	name: "res5a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5a"
	top: "res5b_branch2a"
	name: "res5b_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a"
	name: "bn5b_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a"
	name: "scale5b_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a"
	name: "res5b_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2b"
	name: "res5b_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b"
	name: "bn5b_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b"
	name: "scale5b_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b"
	name: "res5b_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2c"
	name: "res5b_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5b_branch2c"
	top: "res5b_branch2c"
	name: "bn5b_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5b_branch2c"
	top: "res5b_branch2c"
	name: "scale5b_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5a"
	bottom: "res5b_branch2c"
	top: "res5b"
	name: "res5b"
	type: "Eltwise"
}

layer {
	bottom: "res5b"
	top: "res5b"
	name: "res5b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5b"
	top: "res5c_branch2a"
	name: "res5c_branch2a"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a"
	name: "bn5c_branch2a"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a"
	name: "scale5c_branch2a"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a"
	name: "res5c_branch2a_relu"
	type: "ReLU"
}

layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2b"
	name: "res5c_branch2b"
	type: "Convolution"
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b"
	name: "bn5c_branch2b"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b"
	name: "scale5c_branch2b"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b"
	name: "res5c_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2c"
	name: "res5c_branch2c"
	type: "Convolution"
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
		bias_term: false
	}
}

layer {
	bottom: "res5c_branch2c"
	top: "res5c_branch2c"
	name: "bn5c_branch2c"
	type: "BatchNorm"
	batch_norm_param {
		use_global_stats: true
	}
}

layer {
	bottom: "res5c_branch2c"
	top: "res5c_branch2c"
	name: "scale5c_branch2c"
	type: "Scale"
	scale_param {
		bias_term: true
	}
}

layer {
	bottom: "res5b"
	bottom: "res5c_branch2c"
	top: "res5c"
	name: "res5c"
	type: "Eltwise"
}

layer {
	bottom: "res5c"
	top: "res5c"
	name: "res5c_relu"
	type: "ReLU"
}

##############################################################################################################
#ENHANCE CONV5


	layer { type: "Crop" name: 'crop4' bottom: 'weight_map_d4' bottom: "res5c" top: 'weight_map_d4_croped' }

	layer {
	name: "add_weight_4"
	type: "Python"
	bottom: "res5c"
	bottom: 'weight_map_d4_croped'
	top: "res5c_weighted"
	python_param {
	module: "add_weight"
	layer: "addWeight"
	}
	}


	layer {
	bottom: "res5c_weighted"
	top: "res5c_weighted_c"
	name: "res5c_weighted_c"
	type: "Convolution"
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 2048 pad: 1 kernel_size: 3 stride: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }



	layer {
	bottom: "res5c"
	bottom: "res5c_weighted_c"
	top: "res5c_weighted_e"
	name: "res5c_weighted_e"
	type: "Eltwise"
	}

##########################################################################################################
#ALL DONE
##########################################################################################################
	layer { name: 'trans_pool1' type: "Convolution" bottom: "pool1_weighted_f" top: 'down_pool1_weighted_f'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 stride:2
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Crop" name: 'crop_pool1_weighted_e' bottom: 'down_pool1_weighted_f' bottom: "res2c_weighted_e" top: 'pool1_weighted_e' }

	################################### PATH 3 ############################################
	# Prediction #



	layer { name: 'res1_branch1_path3_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch1_path3_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path3_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch2a_path3_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path3_4" bottom: "res1_branch1_path3_4" bottom: "res1_branch2a_path3_4"
	top: "res1_path3_4" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'res1_path3_4' top: 'trans_relu_path3_4' name: 'trans_relu_path3_4' type: "ReLU" }
	layer { name: 'trans_path3_4' type: "Convolution" bottom: 'trans_relu_path3_4' top: 'trans_path3_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path3_4' bottom: 'trans_path3_4' top: 'upres2_path3_4'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 256 } }
	layer { type: "Crop" name: 'cropres2_path3_4' bottom: 'upres2_path3_4' bottom: "res4f_weighted_e" top: 'cropres2_path3_4' }

	####

	layer { name: 'res1_branch1_path3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch1_path3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch2a_path3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path3" bottom: "res1_branch1_path3" bottom: "res1_branch2a_path3"
	top: "res1_path3" type: "Eltwise" eltwise_param { operation: 1 } }

	layer { name: "elt_path3" bottom: "res1_path3" bottom: "cropres2_path3_4"
	top: "elt_path3" type: "Eltwise" eltwise_param { operation: 1 } }



	################################### PATH 2 ############################################
	#path2_4


	layer { name: 'res1_branch1_path2_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch1_path2_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path2_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch2a_path2_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path2_4" bottom: "res1_branch1_path2_4" bottom: "res1_branch2a_path2_4"
	top: "res1_path2_4" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'res1_path2_4' top: 'trans_relu_path2_4' name: 'trans_relu_path2_4' type: "ReLU" }
	layer { name: 'trans_path2_4' type: "Convolution" bottom: 'trans_relu_path2_4' top: 'trans_path2_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }
	layer { type: "Deconvolution" name: 'upres2_path2_4' bottom: 'trans_path2_4' top: 'upres2_path2_4'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 8 stride: 4 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path2_4' bottom: 'upres2_path2_4' bottom: 'res3d_weighted_e' top: 'cropres2_path2_4' }


	###path2_3



	layer { name: 'res1_branch1_path2_3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch1_path2_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: 'res1_branch2a_path2_3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch2a_path2_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path2_3" bottom: "res1_branch1_path2_3" bottom: "res1_branch2a_path2_3"
	top: "res1_path2_3" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { bottom: 'res1_path2_3' top: 'trans_relu_path2_3' name: 'trans_relu_path2_3' type: "ReLU" }
	layer { name: 'trans_path2_3' type: "Convolution" bottom: 'trans_relu_path2_3' top: 'trans_path2_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path2_3' bottom: 'trans_path2_3' top: 'upres2_path2_3'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path2_3' bottom: 'upres2_path2_3' bottom: 'res3d_weighted_e' top: 'cropres2_path2_3' }

	####

	layer { name: 'res1_branch1_path2' type: "Convolution" bottom: 'res3d_weighted_e' top: 'res1_branch1_path2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path2' type: "Convolution" bottom: 'res3d_weighted_e' top: 'res1_branch2a_path2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path2" bottom: "res1_branch1_path2" bottom: "res1_branch2a_path2"
	top: "res1_path2" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { bottom: 'res1_path2' top: 'trans_relu_path2' name: 'trans_relu_path2' type: "ReLU" }
	layer { name: 'trans_path2' type: "Convolution" bottom: 'trans_relu_path2' top: 'trans_path2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "elt_path2" bottom: "trans_path2" bottom: "cropres2_path2_4" bottom: "cropres2_path2_3"
	top: "elt_path2" type: "Eltwise" eltwise_param { operation: 1 } }




	################################### PATH 1 ############################################
	#path1_4



	layer { name: 'res1_branch1_path1_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch1_path1_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path1_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch2a_path1_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path1_4" bottom: "res1_branch1_path1_4" bottom: "res1_branch2a_path1_4"
	top: "res1_path1_4" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { bottom: 'res1_path1_4' top: 'trans_relu_path1_4' name: 'trans_relu_path1_4' type: "ReLU" }
	layer { name: 'trans_path1_4' type: "Convolution" bottom: 'trans_relu_path1_4' top: 'trans_path1_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path1_4' bottom: 'trans_path1_4' top: 'upres2_path1_4'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 16 stride: 8 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path1_4' bottom: 'upres2_path1_4' bottom: "res2c_weighted_e" top: 'cropres2_path1_4' }

	###path1_3


	layer { name: 'res1_branch1_path1_3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch1_path1_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path1_3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch2a_path1_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path1_3" bottom: "res1_branch1_path1_3" bottom: "res1_branch2a_path1_3"
	top: "res1_path1_3" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { bottom: 'res1_path1_3' top: 'trans_relu_path1_3' name: 'trans_relu_path1_3' type: "ReLU" }
	layer { name: 'trans_path1_3' type: "Convolution" bottom: 'trans_relu_path1_3' top: 'trans_path1_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path1_3' bottom: 'trans_path1_3' top: 'upres2_path1_3'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 8 stride: 4 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path1_3' bottom: 'upres2_path1_3' bottom: "res2c_weighted_e" top: 'cropres2_path1_3' }

	###path1_2


	layer { name: 'res1_branch1_path1_2' type: "Convolution" bottom: 'res3d_weighted_e' top: 'res1_branch1_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path1_2' type: "Convolution" bottom: 'res3d_weighted_e' top: 'res1_branch2a_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path1_2" bottom: "res1_branch1_path1_2" bottom: "res1_branch2a_path1_2"
	top: "res1_path1_2" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'res1_path1_2' top: 'trans_relu_path1_2' name: 'trans_relu_path1_2' type: "ReLU" }
	layer { name: 'trans_path1_2' type: "Convolution" bottom: 'trans_relu_path1_2' top: 'trans_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path1_2' bottom: 'trans_path1_2' top: 'upres2_path1_2'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path1_2' bottom: 'upres2_path1_2' bottom: "res2c_weighted_e" top: 'cropres2_path1_2' }
	####

	layer { name: 'res1_branch1_path1' type: "Convolution" bottom: "res2c_weighted_e" top: 'res1_branch1_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path1' type: "Convolution" bottom: "res2c_weighted_e" top: 'res1_branch2a_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path1" bottom: "res1_branch1_path1" bottom: "res1_branch2a_path1"
	top: "res1_path1" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { name: "elt_path1" bottom: "res1_path1" bottom: "cropres2_path1_4" bottom: "cropres2_path1_3" bottom: "cropres2_path1_2"
	top: "elt_path1" type: "Eltwise" eltwise_param { operation: 1 } }




	##### path0 ######
	#path0_4



	layer { name: 'res1_branch1_path0_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch1_path0_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path0_4' type: "Convolution" bottom: "res5c_weighted_e" top: 'res1_branch2a_path0_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path0_4" bottom: "res1_branch1_path0_4" bottom: "res1_branch2a_path0_4"
	top: "res1_path0_4" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { bottom: 'res1_path0_4' top: 'trans_relu_path0_4' name: 'trans_relu_path0_4' type: "ReLU" }
	layer { name: 'trans_path0_4' type: "Convolution" bottom: 'trans_relu_path0_4' top: 'trans_path0_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path0_4' bottom: 'trans_path0_4' top: 'upres2_path0_4'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 16 stride: 8 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path0_4' bottom: 'upres2_path0_4' bottom: "res2c_weighted_e" top: 'cropres2_path0_4' }

	###path0_3


	layer { name: 'res1_branch1_path0_3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch1_path0_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path0_3' type: "Convolution" bottom: "res4f_weighted_e" top: 'res1_branch2a_path0_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path0_3" bottom: "res1_branch1_path0_3" bottom: "res1_branch2a_path0_3"
	top: "res1_path0_3" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { bottom: 'res1_path0_3' top: 'trans_relu_path0_3' name: 'trans_relu_path0_3' type: "ReLU" }
	layer { name: 'trans_path0_3' type: "Convolution" bottom: 'trans_relu_path0_3' top: 'trans_path0_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path0_3' bottom: 'trans_path0_3' top: 'upres2_path0_3'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 8 stride: 4 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path0_3' bottom: 'upres2_path0_3' bottom: "res2c_weighted_e" top: 'cropres2_path0_3' }

	###path0_2


	layer { name: 'res1_branch1_path0_2' type: "Convolution" bottom: 'res3d_weighted_e' top: 'res1_branch1_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path0_2' type: "Convolution" bottom: 'res3d_weighted_e' top: 'res1_branch2a_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path0_2" bottom: "res1_branch1_path0_2" bottom: "res1_branch2a_path0_2"
	top: "res1_path0_2" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'res1_path0_2' top: 'trans_relu_path0_2' name: 'trans_relu_path0_2' type: "ReLU" }
	layer { name: 'trans_path0_2' type: "Convolution" bottom: 'trans_relu_path0_2' top: 'trans_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'upres2_path0_2' bottom: 'trans_path0_2' top: 'upres2_path0_2'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 128 } }
	layer { type: "Crop" name: 'cropres2_path0_2' bottom: 'upres2_path0_2' bottom: "res2c_weighted_e" top: 'cropres2_path0_2' }



	###path0_1


	layer { name: 'res1_branch1_path0_1' type: "Convolution" bottom: 'res2c_weighted_e' top: 'res1_branch1_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path0_1' type: "Convolution" bottom: 'res2c_weighted_e' top: 'res1_branch2a_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path0_1" bottom: "res1_branch1_path0_1" bottom: "res1_branch2a_path0_1"
	top: "res1_path0_1" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'res1_path0_1' top: 'trans_relu_path0_1' name: 'trans_relu_path0_1' type: "ReLU" }
	layer { name: 'trans_path0_1' type: "Convolution" bottom: 'trans_relu_path0_1' top: 'trans_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { type: "Crop" name: 'cropres2_path0_1' bottom: 'trans_path0_1' bottom: "res2c_weighted_e" top: 'cropres2_path0_1' }




	####path0

	layer { name: 'res1_branch1_path0' type: "Convolution" bottom: "pool1_weighted_e" top: 'res1_branch1_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'res1_branch2a_path0' type: "Convolution" bottom: "pool1_weighted_e" top: 'res1_branch2a_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "res1_path0" bottom: "res1_branch1_path0" bottom: "res1_branch2a_path0"
	top: "res1_path0" type: "Eltwise" eltwise_param { operation: 1 } }


	layer { name: "elt_path0" bottom: "res1_path0" bottom: "cropres2_path0_4" bottom: "cropres2_path0_3" bottom: "cropres2_path0_2" bottom: "cropres2_path0_1"
	top: "elt_path0" type: "Eltwise" eltwise_param { operation: 1 } }



	#####Pyramid 2


	################################### PATH 2 ############################################
	# Prediction #



	layer { name: 'pyramid2_res1_branch1_path2_4' type: "Convolution" bottom: "elt_path3" top: 'pyramid2_res1_branch1_path2_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path2_4' type: "Convolution" bottom: "elt_path3" top: 'pyramid2_res1_branch2a_path2_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path2_4" bottom: "pyramid2_res1_branch1_path2_4" bottom: "pyramid2_res1_branch2a_path2_4"
	top: "pyramid2_res1_path2_4" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid2_res1_path2_4' top: 'pyramid2_trans_relu_path2_4' name: 'pyramid2_trans_relu_path2_4' type: "ReLU" }
	layer { name: 'pyramid2_trans_path2_4' type: "Convolution" bottom: 'pyramid2_trans_relu_path2_4' top: 'pyramid2_trans_path2_4'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid2_upres2_path2_4' bottom: 'pyramid2_trans_path2_4' top: 'pyramid2_upres2_path2_4'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 256 } }
	layer { type: "Crop" name: 'pyramid2_cropres2_path2_4' bottom: 'pyramid2_upres2_path2_4' bottom: "res3d_weighted_e" top: 'pyramid2_cropres2_path2_4' }

	####

	layer { name: 'pyramid2_res1_branch1_path2' type: "Convolution" bottom: "elt_path2" top: 'pyramid2_res1_branch1_path2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path2' type: "Convolution" bottom: "elt_path2" top: 'pyramid2_res1_branch2a_path2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path2" bottom: "pyramid2_res1_branch1_path2" bottom: "pyramid2_res1_branch2a_path2"
	top: "pyramid2_res1_path2" type: "Eltwise" eltwise_param { operation: 1 } }





	layer { bottom: 'pyramid2_res1_path2' top: 'pyramid2_trans_relu_path2' name: 'pyramid2_trans_relu_path2' type: "ReLU" }
	layer { name: 'pyramid2_trans_path2' type: "Convolution" bottom: 'pyramid2_trans_relu_path2' top: 'pyramid2_trans_path2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "pyramid2_elt_path2" bottom: "pyramid2_trans_path2" bottom: "pyramid2_cropres2_path2_4"
	top: "pyramid2_elt_path2" type: "Eltwise" eltwise_param { operation: 1 } }





	################################### PATH 1 ############################################
	# Prediction #



	layer { name: 'pyramid2_res1_branch1_path1_3' type: "Convolution" bottom: "elt_path3" top: 'pyramid2_res1_branch1_path1_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path1_3' type: "Convolution" bottom: "elt_path3" top: 'pyramid2_res1_branch2a_path1_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "pyramid2_res1_path1_3" bottom: "pyramid2_res1_branch1_path1_3" bottom: "pyramid2_res1_branch2a_path1_3"
	top: "pyramid2_res1_path1_3" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid2_res1_path1_3' top: 'pyramid2_trans_relu_path1_3' name: 'pyramid2_trans_relu_path1_3' type: "ReLU" }
	layer { name: 'pyramid2_trans_path1_3' type: "Convolution" bottom: 'pyramid2_trans_relu_path1_3' top: 'pyramid2_trans_path1_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid2_upres2_path1_3' bottom: 'pyramid2_trans_path1_3' top: 'pyramid2_upres2_path1_3'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 8 stride: 4 num_output: 256 } }
	layer { type: "Crop" name: 'pyramid2_cropres2_path1_3' bottom: 'pyramid2_upres2_path1_3' bottom: "res2c_weighted_e" top: 'pyramid2_cropres2_path1_3' }






	######

	layer { name: 'pyramid2_res1_branch1_path1_2' type: "Convolution" bottom: "elt_path2" top: 'pyramid2_res1_branch1_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path1_2' type: "Convolution" bottom: "elt_path2" top: 'pyramid2_res1_branch2a_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path1_2" bottom: "pyramid2_res1_branch1_path1_2" bottom: "pyramid2_res1_branch2a_path1_2"
	top: "pyramid2_res1_path1_2" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid2_res1_path1_2' top: 'pyramid2_trans_relu_path1_2' name: 'pyramid2_trans_relu_path1_2' type: "ReLU" }
	layer { name: 'pyramid2_trans_path1_2' type: "Convolution" bottom: 'pyramid2_trans_relu_path1_2' top: 'pyramid2_trans_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid2_upres2_path1_2' bottom: 'pyramid2_trans_path1_2' top: 'pyramid2_upres2_path1_2'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 256 } }
	layer { type: "Crop" name: 'pyramid2_cropres2_path1_2' bottom: 'pyramid2_upres2_path1_2' bottom: "res2c_weighted_e" top: 'pyramid2_cropres2_path1_2' }






	####

	layer { name: 'pyramid2_res1_branch1_path1' type: "Convolution" bottom: "elt_path1" top: 'pyramid2_res1_branch1_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path1' type: "Convolution" bottom: "elt_path1" top: 'pyramid2_res1_branch2a_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path1" bottom: "pyramid2_res1_branch1_path1" bottom: "pyramid2_res1_branch2a_path1"
	top: "pyramid2_res1_path1" type: "Eltwise" eltwise_param { operation: 1 } }





	layer { bottom: 'pyramid2_res1_path1' top: 'pyramid2_trans_relu_path1' name: 'pyramid2_trans_relu_path1' type: "ReLU" }
	layer { name: 'pyramid2_trans_path1' type: "Convolution" bottom: 'pyramid2_trans_relu_path1' top: 'pyramid2_trans_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "pyramid2_elt_path1" bottom: "pyramid2_trans_path1" bottom: "pyramid2_cropres2_path1_2" bottom: "pyramid2_cropres2_path1_3"
	top: "pyramid2_elt_path1" type: "Eltwise" eltwise_param { operation: 1 } }


	################################### PATH 0 ############################################
	# Prediction #



	layer { name: 'pyramid2_res1_branch1_path0_3' type: "Convolution" bottom: "elt_path3" top: 'pyramid2_res1_branch1_path0_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path0_3' type: "Convolution" bottom: "elt_path3" top: 'pyramid2_res1_branch2a_path0_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path0_3" bottom: "pyramid2_res1_branch1_path0_3" bottom: "pyramid2_res1_branch2a_path0_3"
	top: "pyramid2_res1_path0_3" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid2_res1_path0_3' top: 'pyramid2_trans_relu_path0_3' name: 'pyramid2_trans_relu_path0_3' type: "ReLU" }
	layer { name: 'pyramid2_trans_path0_3' type: "Convolution" bottom: 'pyramid2_trans_relu_path0_3' top: 'pyramid2_trans_path0_3'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid2_upres2_path0_3' bottom: 'pyramid2_trans_path0_3' top: 'pyramid2_upres2_path0_3'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 8 stride: 4 num_output: 256 } }
	layer { type: "Crop" name: 'pyramid2_cropres2_path0_3' bottom: 'pyramid2_upres2_path0_3' bottom: "res2c_weighted_e" top: 'pyramid2_cropres2_path0_3' }






	######

	layer { name: 'pyramid2_res1_branch1_path0_2' type: "Convolution" bottom: "elt_path2" top: 'pyramid2_res1_branch1_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path0_2' type: "Convolution" bottom: "elt_path2" top: 'pyramid2_res1_branch2a_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path0_2" bottom: "pyramid2_res1_branch1_path0_2" bottom: "pyramid2_res1_branch2a_path0_2"
	top: "pyramid2_res1_path0_2" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid2_res1_path0_2' top: 'pyramid2_trans_relu_path0_2' name: 'pyramid2_trans_relu_path0_2' type: "ReLU" }
	layer { name: 'pyramid2_trans_path0_2' type: "Convolution" bottom: 'pyramid2_trans_relu_path0_2' top: 'pyramid2_trans_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid2_upres2_path0_2' bottom: 'pyramid2_trans_path0_2' top: 'pyramid2_upres2_path0_2'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 256 } }
	layer { type: "Crop" name: 'pyramid2_cropres2_path0_2' bottom: 'pyramid2_upres2_path0_2' bottom: "res2c_weighted_e" top: 'pyramid2_cropres2_path0_2' }





	######

	layer { name: 'pyramid2_res1_branch1_path0_1' type: "Convolution" bottom: "elt_path1" top: 'pyramid2_res1_branch1_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path0_1' type: "Convolution" bottom: "elt_path1" top: 'pyramid2_res1_branch2a_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path0_1" bottom: "pyramid2_res1_branch1_path0_1" bottom: "pyramid2_res1_branch2a_path0_1"
	top: "pyramid2_res1_path0_1" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid2_res1_path0_1' top: 'pyramid2_trans_relu_path0_1' name: 'pyramid2_trans_relu_path0_1' type: "ReLU" }
	layer { name: 'pyramid2_trans_path0_1' type: "Convolution" bottom: 'pyramid2_trans_relu_path0_1' top: 'pyramid2_trans_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { type: "Crop" name: 'pyramid2_cropres2_path0_1' bottom: 'pyramid2_trans_path0_1' bottom: "res2c_weighted_e" top: 'pyramid2_cropres2_path0_1' }




	####

	layer { name: 'pyramid2_res1_branch1_path0' type: "Convolution" bottom: "elt_path0" top: 'pyramid2_res1_branch1_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid2_res1_branch2a_path0' type: "Convolution" bottom: "elt_path0" top: 'pyramid2_res1_branch2a_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid2_res1_path0" bottom: "pyramid2_res1_branch1_path0" bottom: "pyramid2_res1_branch2a_path0"
	top: "pyramid2_res1_path0" type: "Eltwise" eltwise_param { operation: 1 } }





	layer { bottom: 'pyramid2_res1_path0' top: 'pyramid2_trans_relu_path0' name: 'pyramid2_trans_relu_path0' type: "ReLU" }
	layer { name: 'pyramid2_trans_path0' type: "Convolution" bottom: 'pyramid2_trans_relu_path0' top: 'pyramid2_trans_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "pyramid2_elt_path0" bottom: "pyramid2_trans_path0" bottom: "pyramid2_cropres2_path0_1" bottom: "pyramid2_cropres2_path0_2" bottom: "pyramid2_cropres2_path0_3"
	top: "pyramid2_elt_path0" type: "Eltwise" eltwise_param { operation: 1 } }






	###Pyramid 3




	################################### PATH 1 ############################################
	# Prediction #



	layer { name: 'pyramid3_res1_branch1_path1_2' type: "Convolution" bottom: "pyramid2_elt_path2" top: 'pyramid3_res1_branch1_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid3_res1_branch2a_path1_2' type: "Convolution" bottom: "pyramid2_elt_path2" top: 'pyramid3_res1_branch2a_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid3_res1_path1_2" bottom: "pyramid3_res1_branch1_path1_2" bottom: "pyramid3_res1_branch2a_path1_2"
	top: "pyramid3_res1_path1_2" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid3_res1_path1_2' top: 'pyramid3_trans_relu_path1_2' name: 'pyramid3_trans_relu_path1_2' type: "ReLU" }
	layer { name: 'pyramid3_trans_path1_2' type: "Convolution" bottom: 'pyramid3_trans_relu_path1_2' top: 'pyramid3_trans_path1_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid3_upres2_path1_2' bottom: 'pyramid3_trans_path1_2' top: 'pyramid3_upres2_path1_2'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 64 } }
	layer { type: "Crop" name: 'pyramid3_cropres2_path1_2' bottom: 'pyramid3_upres2_path1_2' bottom: "res2c_weighted_e" top: 'pyramid3_cropres2_path1_2' }













	####

	layer { name: 'pyramid3_res1_branch1_path1' type: "Convolution" bottom: "pyramid2_elt_path1" top: 'pyramid3_res1_branch1_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid3_res1_branch2a_path1' type: "Convolution" bottom: "pyramid2_elt_path1" top: 'pyramid3_res1_branch2a_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid3_res1_path1" bottom: "pyramid3_res1_branch1_path1" bottom: "pyramid3_res1_branch2a_path1"
	top: "pyramid3_res1_path1" type: "Eltwise" eltwise_param { operation: 1 } }





	layer { bottom: 'pyramid3_res1_path1' top: 'pyramid3_trans_relu_path1' name: 'pyramid3_trans_relu_path1' type: "ReLU" }
	layer { name: 'pyramid3_trans_path1' type: "Convolution" bottom: 'pyramid3_trans_relu_path1' top: 'pyramid3_trans_path1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "pyramid3_elt_path1" bottom: "pyramid3_trans_path1" bottom: "pyramid3_cropres2_path1_2"
	top: "pyramid3_elt_path1" type: "Eltwise" eltwise_param { operation: 1 } }




	################################### PATH 0 ############################################
	# Prediction #









	######

	layer { name: 'pyramid3_res1_branch1_path0_2' type: "Convolution" bottom: "pyramid2_elt_path2" top: 'pyramid3_res1_branch1_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid3_res1_branch2a_path0_2' type: "Convolution" bottom: "pyramid2_elt_path2" top: 'pyramid3_res1_branch2a_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid3_res1_path0_2" bottom: "pyramid3_res1_branch1_path0_2" bottom: "pyramid3_res1_branch2a_path0_2"
	top: "pyramid3_res1_path0_2" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid3_res1_path0_2' top: 'pyramid3_trans_relu_path0_2' name: 'pyramid3_trans_relu_path0_2' type: "ReLU" }
	layer { name: 'pyramid3_trans_path0_2' type: "Convolution" bottom: 'pyramid3_trans_relu_path0_2' top: 'pyramid3_trans_path0_2'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { type: "Deconvolution" name: 'pyramid3_upres2_path0_2' bottom: 'pyramid3_trans_path0_2' top: 'pyramid3_upres2_path0_2'
	param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
	convolution_param { kernel_size: 4 stride: 2 num_output: 64} }
	layer { type: "Crop" name: 'pyramid3_cropres2_path0_2' bottom: 'pyramid3_upres2_path0_2' bottom: "res2c_weighted_e" top: 'pyramid3_cropres2_path0_2' }





	######

	layer { name: 'pyramid3_res1_branch1_path0_1' type: "Convolution" bottom: "pyramid2_elt_path1" top: 'pyramid3_res1_branch1_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid3_res1_branch2a_path0_1' type: "Convolution" bottom: "pyramid2_elt_path1" top: 'pyramid3_res1_branch2a_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid3_res1_path0_1" bottom: "pyramid3_res1_branch1_path0_1" bottom: "pyramid3_res1_branch2a_path0_1"
	top: "pyramid3_res1_path0_1" type: "Eltwise" eltwise_param { operation: 1 } }



	layer { bottom: 'pyramid3_res1_path0_1' top: 'pyramid3_trans_relu_path0_1' name: 'pyramid3_trans_relu_path0_1' type: "ReLU" }
	layer { name: 'pyramid3_trans_path0_1' type: "Convolution" bottom: 'pyramid3_trans_relu_path0_1' top: 'pyramid3_trans_path0_1'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { type: "Crop" name: 'pyramid3_cropres2_path0_1' bottom: 'pyramid3_trans_path0_1' bottom: "res2c_weighted_e" top: 'pyramid3_cropres2_path0_1' }




	####

	layer { name: 'pyramid3_res1_branch1_path0' type: "Convolution" bottom: "pyramid2_elt_path0" top: 'pyramid3_res1_branch1_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 0 kernel_size: 1
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: 'pyramid3_res1_branch2a_path0' type: "Convolution" bottom: "pyramid2_elt_path0" top: 'pyramid3_res1_branch2a_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }

	layer { name: "pyramid3_res1_path0" bottom: "pyramid3_res1_branch1_path0" bottom: "pyramid3_res1_branch2a_path0"
	top: "pyramid3_res1_path0" type: "Eltwise" eltwise_param { operation: 1 } }





	layer { bottom: 'pyramid3_res1_path0' top: 'pyramid3_trans_relu_path0' name: 'pyramid3_trans_relu_path0' type: "ReLU" }
	layer { name: 'pyramid3_trans_path0' type: "Convolution" bottom: 'pyramid3_trans_relu_path0' top: 'pyramid3_trans_path0'
	param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
	convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
	weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }


	layer { name: "pyramid3_elt_path0" bottom: "pyramid3_trans_path0" bottom: "pyramid3_cropres2_path0_1" bottom: "pyramid3_cropres2_path0_2"
	top: "pyramid3_elt_path0" type: "Eltwise" eltwise_param { operation: 1 } }














##### fuse #####
layer { name: "Eltwise"  bottom: "pyramid3_elt_path1"  bottom: "pyramid3_elt_path0"
  top: "concat_fuse" type: "Eltwise" eltwise_param { operation: SUM } }
layer { name: 'score_fuse' type: "Convolution" bottom: 'concat_fuse' top: 'score_fuse'
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
  weight_filler { type: "gaussian" std: 0.01} bias_filler { type: "constant" value: 0 } } }

layer { type: "Deconvolution" name: 'upscore_fuse' bottom: 'score_fuse' top: 'upscore_fuse'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 8 stride: 4 num_output: 64 } }
layer { type: "Crop" name: 'cropscore_fuse' bottom: 'upscore_fuse' bottom: 'data' top: 'cropscore_fuse' }

layer { name: 'relu_score_fuse' top: 'relu_upscore_fuse' bottom: 'cropscore_fuse' type: "ReLU" }

layer { name: 'adapt_fuse' type: "Convolution" bottom: 'relu_upscore_fuse' top: 'adapt_fuse'
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3
  weight_filler { type: "gaussian" std: 0.01 } bias_filler { type: "constant" value: 0 } } }
layer {
  name: "RCL_fuse_smR"
  type: "Convolution"
  bottom: "adapt_fuse"
  top: "RCL_fuse_smR"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    pad: 0
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { type: "Sigmoid" bottom: "RCL_fuse_smR"  top: "sigmoid_fuse"
  name: "sigmoid_fuse" }





































































